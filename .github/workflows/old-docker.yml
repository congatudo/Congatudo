name: Docker build (old-congatudo)
on:
  workflow_dispatch:
  release:
    types: [prereleased]
env:
  REGISTRY: ghcr.io
jobs:
  info:
    runs-on: ubuntu-latest
    name: Get repository information
    outputs:
      version: ${{ steps.vars.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: congatudo/Congatudo
          ref: old-congatudo
          token: ${{ github.token }}
      - name: Set up variables
        id: vars
        run: echo "version=$(git describe --abbrev=0 --tags HEAD)" >> $GITHUB_OUTPUT
  matrix:
    runs-on: ubuntu-latest
    name: Get matrix from json
    outputs:
      matrix: ${{ steps.vars.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up variables
        id: vars
        run: echo "matrix=$(jq -c . matrix.json)" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    name: Build for ${{ matrix.image_name }}
    needs: [info, matrix]
    strategy:
      max-parallel: 2
      matrix: ${{ fromJson(needs.matrix.outputs.matrix) }}
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Cache Docker layers
        uses: actions/cache@v3.2.5
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.image_name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.image_name }}-
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build
        uses: docker/build-push-action@v4.0.0
        with:
          push: false
          load: true
          tags: |
            ${{ env.REGISTRY }}/congatudo/old-congatudo:${{ matrix.image_name }}-${{ needs.info.outputs.version }}
            ${{ env.REGISTRY }}/congatudo/old-congatudo:${{ matrix.image_name }}-latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          build-args: |
            "BUILD_FROM=${{ matrix.build_from }}"
            "PKG_TARGET=${{ matrix.pkg_target }}"
            "PKG_OPTIONS=${{ matrix.pkg_options }}"
      - name: Test
        shell: '/bin/bash {0}'
        run: |
          docker run --rm ${{ env.REGISTRY }}/congatudo/old-congatudo:${{ matrix.image_name }}-${{ needs.info.outputs.version }}
          ret=$?
          if [ $ret -eq 1 ]; then
            exit 0
          else
            exit $ret
          fi
      - name: Push
        run: |
          docker push ${{ env.REGISTRY }}/congatudo/old-congatudo:${{ matrix.image_name }}-${{ needs.info.outputs.version }}
          docker push ${{ env.REGISTRY }}/congatudo/old-congatudo:${{ matrix.image_name }}-latest
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
  manifest:
    runs-on: ubuntu-latest
    name: Create and push manifest
    needs: [info, build]
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create manifest
        run: |
          # TODO: Use matrix here.
          docker manifest create ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-latest \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-armv7-latest \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-aarch64-latest \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-amd64-latest
          docker manifest create ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-latest \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-armhf-latest \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-armv7-latest \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-aarch64-latest \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-amd64-latest
          docker manifest create ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-${{ needs.info.outputs.version }} \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-armv7-${{ needs.info.outputs.version }} \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-aarch64-${{ needs.info.outputs.version }} \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-amd64-${{ needs.info.outputs.version }}
          docker manifest create ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-${{ needs.info.outputs.version }} \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-armhf-${{ needs.info.outputs.version }} \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-armv7-${{ needs.info.outputs.version }} \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-aarch64-${{ needs.info.outputs.version }} \
            --amend ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-amd64-${{ needs.info.outputs.version }}
      - name: Push manifest
        run: |
          # TODO: Use matrix here.
          docker manifest push ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-latest
          docker manifest push ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-latest
          docker manifest push ${{ env.REGISTRY }}/congatudo/old-congatudo:alpine-${{ needs.info.outputs.version }}
          docker manifest push ${{ env.REGISTRY }}/congatudo/old-congatudo:homeassistant-${{ needs.info.outputs.version }}